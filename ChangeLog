2001-06-06 21:38  Pierre Phaneuf <pp@ludusdesign.com>

	* README: Release 0.1.0

2001-06-06 21:37  Pierre Phaneuf <pp@ludusdesign.com>

	* CREDITS: Added a CREDITS file.

2001-06-06 21:35  Pierre Phaneuf <pp@ludusdesign.com>

	* .cvsignore: Ignore the ChangeLog file, it is machine-generated
	from the CVS database and is thus not included in CVS.

2001-06-06 21:28  Pierre Phaneuf <pp@ludusdesign.com>

	* README: Added a README file.

2001-06-06 21:10  Pierre Phaneuf <pp@ludusdesign.com>

	* INSTALL: Initial commit of an INSTALL file for people to look at.

2001-06-06 21:08  Pierre Phaneuf <pp@ludusdesign.com>

	* LICENSE: We use the Lesser General Public License.

2001-01-30 01:18  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: test000/rules.mk, test001/rules.mk, test002/rules.mk,
	test005/rules.mk, test005/test.cpp: Resolved linking problems
	(caused by use of the C++ library) and fixed test005, in my
	never-ending battle against the evil Stéphane! ;-)

2001-01-27 16:00  Stéphane Lajoie <dada@ludusdesign.com>

	* include/xplc/uuid.h, xplc/simpledl.cpp: 
	Fixed bad #ifdef.

2001-01-16 08:42  Stéphane Lajoie <dada@ludusdesign.com>

	* tests/test005/test.cpp, tests/test005/testcomponent.dsp,
	xplc/simpledl.cpp: 
	Sort of removed platform-specific crap from test005. This changes
	the simple dynamic loader interface in that the file extension (.so
	or .dll) must NOT be specified now. The platform-specific code will
	append the proper extension.
	
	Also, the path to the test component is no longer specified in the
	test. This works under Windows because the LoadLibrary API looks in
	many different places for the .dll file, including the directory
	from which the calling process' exe was loaded (so it's not a
	coincidence that the testcomponent project now outputs the dll in
	test005/).

2001-01-13 00:51  Stéphane Lajoie <dada@ludusdesign.com>

	* .cvsignore, tests/test000/.cvsignore, tests/test001/.cvsignore,
	tests/test002/.cvsignore, tests/test003/.cvsignore,
	tests/test004/.cvsignore, tests/test005/.cvsignore: 
	Ignore MSDev byproducts.

2001-01-13 00:47  Stéphane Lajoie <dada@ludusdesign.com>

	* xplc.dsp, tests/test000/test000.dsp, tests/test001/test001.dsp,
	tests/test002/test002.dsp, tests/test003/test003.dsp,
	tests/test004/test004.dsp, tests/test005/test005.dsp,
	tests/test005/testcomponent.dsp: 
	Added MSDev project files for all projects.

2001-01-13 00:38  Stéphane Lajoie <dada@ludusdesign.com>

	* include/xplc/ISimpleDynamicLoader.h, include/xplc/utils.h,
	include/xplc/uuid.h, tests/test.h, tests/testmain.cpp,
	tests/test000/test.cpp, tests/test001/test.cpp,
	tests/test002/test.cpp, tests/test003/test.cpp,
	tests/test004/test.cpp, tests/test005/test.cpp,
	tests/test005/testobj.cpp, xplc/factory.cpp, xplc/servmgr.cpp,
	xplc/servmgr.h, xplc/simpledl.cpp, xplc/simpledl.h,
	xplc/statichandler.cpp, xplc/statichandler.h, xplc/xplc.cpp: 
	Changed all NULL to 0. That's supposedly "the C++ way". Makes it
	work on Doze too :).  Fixed all MSDev warnings (this so-called
	"performance warning" is the most idiotic thing out of Microsoft
	ever, and that's saying something).  Adapted the wizardry in
	xplc/uuid.h to MS compiler.  Implemented the Win32 version of the
	simple dynamic loader.
	
	NOTE: I may have broken the Linux build with my new #ifdefs, as I'm
	not sure of the proper symbol names under Linux. So please don't
	take this code on faith :).

2000-12-28 14:40  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: vars.mk, test005/vars.mk: We were not cleaning up the
	test binaries, as they were not part of the targets, corrected
	this.

2000-12-22 20:19  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/xplc.h, xplc/xplc.cpp: XPLC::getServiceManager now
	uses the factory of generic factory to create factories for its
	other components. The static service handler is now directly
	available through the service manager instead of being undirectly
	accessed through XPLC::addObject and XPLC::removeObject.

2000-12-22 15:57  Pierre Phaneuf <pp@ludusdesign.com>

	* config/: config.mk.in, vars.mk: Removed the unused libidl
	configuration from the makefiles, as it added a useless dependency.
	Also made the dependency file part of the distribution, so that
	users do not have to generate it.

2000-12-14 11:32  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test003/test.cpp: Corrected a typo.

2000-12-13 20:04  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test000/rules.mk, tests/test001/rules.mk,
	tests/test002/rules.mk, tests/test003/rules.mk,
	tests/test005/.cvsignore, tests/test005/rules.mk,
	tests/test005/test.cpp, tests/test005/testobj.cpp,
	tests/test005/testobj.h, tests/test005/vars.mk, xplc/simpledl.cpp,
	xplc/simpledl.h, xplc/xplc.cpp: Working implementation of the
	simple dynamic loader and its unit test.  Made the
	XPLC::getServiceManager() method populate the static service
	handler with XPLC's own components.

2000-12-13 20:02  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/: factory.cpp, factory.h: Changed the create() method to
	return a IObject* instead.

2000-12-13 19:53  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test004/: rules.mk, test.cpp, vars.mk: It is preferable to
	go through IObject for these tests.

2000-12-13 19:48  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/xplc.h: Added UUIDs for included components.

2000-12-13 19:31  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test004/.cvsignore, tests/test004/rules.mk,
	tests/test004/test.cpp, tests/test004/vars.mk, xplc/factory.cpp,
	xplc/factory.h: Added a generic factory component and its
	accompanying unit test.

2000-12-13 19:18  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IGenericFactory.h: Fixed the original tentative
	version.

2000-12-13 19:17  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/ISimpleDynamicLoader.h: Clarified an important
	interface-defining comment.

2000-12-13 19:15  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IFactory.h, include/xplc/IGenericFactory.h,
	include/xplc/IObject.h, include/xplc/IServiceHandler.h,
	include/xplc/IServiceManager.h,
	include/xplc/ISimpleDynamicLoader.h,
	include/xplc/IStaticServiceHandler.h, include/xplc/uuid.h,
	tests/test.h: Changed DEFINE_IID to the more generic DEFINE_UUID.

2000-12-12 18:06  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IFactory.h, include/xplc/IGenericFactory.h,
	include/xplc/ISimpleDynamicLoader.h, xplc/simpledl.cpp,
	xplc/simpledl.h: In progress factory interfaces and simple dynamic
	loader component (stubbed for the moment).

2000-12-12 12:05  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test003/test.cpp: Forgot a small detail that the unit tests
	*did* get, but I had forgot to run them, so that's what happen...

2000-12-12 12:03  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IObject.h, include/xplc/IServiceHandler.h,
	include/xplc/IServiceManager.h,
	include/xplc/IStaticServiceHandler.h, include/xplc/uuid.h,
	tests/test.h: Replaced all uses of __attribute__((weak)) by a macro
	so that we can more easily replace that non-portable extension by
	something else.

2000-12-11 02:19  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IObject.h, include/xplc/IStaticServiceHandler.h,
	include/xplc/utils.h, include/xplc/xplc.h, tests/test.h,
	tests/test002/test.cpp, tests/test003/.cvsignore,
	tests/test003/rules.mk, tests/test003/test.cpp,
	tests/test003/vars.mk, xplc/objectnode.h, xplc/statichandler.cpp,
	xplc/statichandler.h, xplc/xplc.cpp: Added a static service handler
	(to handle statically linked components), as well as its test
	suite. Added its two methods to the XPLC class to let applications
	register their own static components, in addition to those that
	(will be) are built into XPLC.

2000-12-10 22:55  Pierre Phaneuf <pp@ludusdesign.com>

	* configure.in, config/config.mk.in: Removed the non-working IDL
	compiler. This will be revived in time, but is confusing for the
	moment.

2000-12-10 21:35  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IServiceHandler.h, include/xplc/IServiceManager.h,
	include/xplc/IServiceManagerHandler.h, tests/test002/test.cpp,
	xplc/handlernode.h, xplc/objectnode.h, xplc/servmgr.cpp,
	xplc/servmgr.h: Cleaned up the design of the service manager by
	spinning off its object directory away. The service manager now
	only has a list of handlers from which to ask about the requested
	objects.
	
	The previous object directory functionality will return in a
	soon-to-come "static" service handler.

2000-12-10 21:01  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test002/test.cpp: Replaced now useless test with a test to
	cover the new IServiceManager interface.

2000-12-10 02:14  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/: IServiceHandler.h, IServiceManagerHandler.h:
	Fixing a CVS glitch.

2000-12-10 02:11  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/: IServiceHandler.h, IServiceManagerHandler.h:
	Corrected a minor CVS glitch.

2000-12-10 02:05  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IServiceHandler.h, include/xplc/IServiceManager.h,
	include/xplc/IServiceManagerHandler.h, xplc/handlernode.h,
	xplc/servmgr.cpp, xplc/servmgr.h: Checkpointing a sizable change
	into a branch, to be landed later.

2000-11-26 21:35  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: test.h, testmain.cpp, test000/test.cpp, test001/test.cpp,
	test002/test.cpp: Improved the test suite to report multiple
	problems in a single run if the problems are not fatal.

2000-11-12 19:01  Pierre Phaneuf <pp@ludusdesign.com>

	* configure.in: I like nice formatting. :-)

2000-10-23 10:42  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/utils.h: Calling ::delete with a void* is not
	correct, but calling ::operator delete() is.

2000-08-03 17:00  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: .cvsignore, rules.mk, test.cpp, test000.cpp, test001.cpp,
	test002.cpp, testmain.cpp, vars.mk, test000/.cvsignore,
	test000/rules.mk, test000/test.cpp, test000/vars.mk,
	test001/.cvsignore, test001/rules.mk, test001/test.cpp,
	test001/vars.mk, test002/.cvsignore, test002/rules.mk,
	test002/test.cpp, test002/vars.mk: Refactored the test scaffolding
	to allow unit and functional tests that have more than a single
	source file.

2000-07-14 15:00  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IServiceManagerHandler.h: Added a comment clarifying
	the semantics of this interface in a critical manner.

2000-07-14 14:59  Pierre Phaneuf <pp@ludusdesign.com>

	* config/config.mk.in: Using many variables depends on having some
	variables previously defined.

2000-07-14 14:57  Pierre Phaneuf <pp@ludusdesign.com>

	* config/vars.mk, xplc/rules.mk: Fix for a problem with the Solaris
	'ar'.

2000-06-20 19:28  Pierre Phaneuf <pp@ludusdesign.com>

	* configure.in: Added a comment to the configure script help
	advising that the IDL compiler is broken.

2000-06-20 16:53  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/: servmgr.cpp, servmgr.h, xplc.cpp: Let the component do the
	work...

2000-06-20 16:48  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/utils.h: Missing include, was working most of the
	time, but was dependent on proper ordering of #include directives.

2000-06-16 17:26  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IServiceManagerHandler.h, xplc/handlernode.h,
	xplc/servmgr.cpp, xplc/servmgr.h: Started adding the hooks for
	service manager handlers.

2000-06-16 17:18  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/servmgr.cpp: Fixed a typo.

2000-06-16 17:07  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/: objectnode.h, servmgr.cpp, servmgr.h: Separated the
	ObjectNode class into its own header file for clarity, renamed the
	"registered" member to "objects" for consistency and added a
	constructor with an initialization list to ServiceManager for
	correctness.

2000-06-16 16:59  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/servmgr.cpp: Made some improvements and added comments to
	the getObject method.

2000-06-16 16:53  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IServiceManager.h, tests/test002.cpp,
	xplc/servmgr.cpp, xplc/servmgr.h: Renamed methods in the
	IServiceManager interface, for simplification (there is no other
	way to get an object than by UUID!) and brevity.

2000-06-16 16:39  Pierre Phaneuf <pp@ludusdesign.com>

	* config/: rules.mk, vars.mk: Added yet another level of
	cleanliness (hey, it's spring).

2000-06-16 16:05  Pierre Phaneuf <pp@ludusdesign.com>

	* Makefile, config/config.mk.in, config/rules.mk, config/vars.mk:
	Added 'distclean' and 'realclean' targets to Makefiles, for various
	degrees of cleanliness.

2000-06-15 17:55  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/: servmgr.cpp, servmgr.h: Fleshed out the unregistering
	method and turned the ObjectNode struct into a class with
	constructor and destructor to take care of the object addRef() and
	release().

2000-06-15 17:45  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test002.cpp: Code to verify proper unregistration was
	added.

2000-06-15 17:43  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/utils.h: All the debugging output is quite
	voluminous, so I put a separate switch for the addRef()/release(),
	which cuts it down sizably.

2000-06-13 16:18  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/utils.h, tests/test002.cpp: Added some comments, two
	templated functions that perform getInterface in a typesafe manner,
	and modified test002 to use one of these templated function.

2000-06-13 14:34  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test002.cpp, xplc/servmgr.cpp, xplc/servmgr.h: Started
	fleshing out functionality (yet to be optimized!) and added a test
	to verify that functionality.

2000-06-13 14:33  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/utils.h: Added heavy debugging info to the
	GenericComponent template.

2000-06-13 12:03  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: test000.cpp, test001.cpp: Separated test000 to make each
	test verify an isolated part of the system.

2000-06-13 11:55  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/utils.h, xplc/xplc.cpp: Changed the name of the
	basic component template to something that makes more sense and
	added an initializer for the reference count (oops!). :-)

2000-06-13 11:33  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/utils.h, xplc/servmgr.cpp, xplc/servmgr.h,
	xplc/xplc.cpp: Added a utility header containing a shim template to
	help implement basic IObject methods.

2000-06-08 18:38  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IServiceManager.h, tests/test000.cpp,
	xplc/servmgr.cpp, xplc/servmgr.h: Changed the signature of
	IServiceManager, adjusting the service manager and added real
	addRef/release/getInterface implementations.

2000-06-08 18:37  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/xplc.cpp: Service manager was not a singleton: fixed.

2000-06-08 18:35  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/: IObject.h, IServiceManager.h: Initialization of
	the IID static member done through weak symbol.

2000-06-07 12:48  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/rules.mk: Fixed linking options.

2000-06-07 12:47  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: test.cpp, test.h, test000.cpp: Added a reason for
	failure, to help identify problems.

2000-06-07 12:19  Pierre Phaneuf <pp@ludusdesign.com>

	* configure.in, config/config.mk.in: Added a 'configure' switch to
	enable compilation of IDL compiler.

2000-06-07 12:12  Pierre Phaneuf <pp@ludusdesign.com>

	* config/vars.mk: Have 'make clean' also removes core files.

2000-05-30 09:42  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/test.cpp: Small modification in the output of the testing
	main(), to allow for test code that generates output.

2000-05-29 15:08  Pierre Phaneuf <pp@ludusdesign.com>

	* config/config.mk.in: Checkpointing the start of an IDL compiler
	(based on libIDL).

2000-01-31 00:06  Pierre Phaneuf <pp@ludusdesign.com>

	* xplc/: servmgr.cpp, servmgr.h, xplc.cpp: Introducing a service
	manager implementation.

2000-01-31 00:06  Pierre Phaneuf <pp@ludusdesign.com>

	* config/vars.mk, tests/rules.mk, xplc/vars.mk: Improvements to the
	build system.

2000-01-31 00:05  Pierre Phaneuf <pp@ludusdesign.com>

	* configure.in, config/config.mk.in: Adding support for CXXFLAGS
	env. var. while ignoring stupid default.

2000-01-30 00:48  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: rules.mk, test.cpp, test.h, test000.cpp, vars.mk: Moved
	some common code into a separate source file.

2000-01-30 00:38  Pierre Phaneuf <pp@ludusdesign.com>

	* tests/: .cvsignore, rules.mk, test000.cpp, vars.mk: Beginnings of
	a test suite.

2000-01-30 00:37  Pierre Phaneuf <pp@ludusdesign.com>

	* config/vars.mk, xplc/rules.mk, xplc/vars.mk: Added support for
	both static and shared libraries.

2000-01-30 00:35  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/IServiceManager.h, include/xplc/xplc.h,
	xplc/xplc.cpp: Started adding some meat.

2000-01-30 00:34  Pierre Phaneuf <pp@ludusdesign.com>

	* include/xplc/uuid.h: Fixed a "typo" that was introduced by
	copying/pasting code from proto5.  Lesson learned.

2000-01-29 16:07  Pierre Phaneuf <pp@ludusdesign.com>

	* Makefile, configure.in, config/config.mk.in, config/rules.mk:
	Added support for an --enable-debug flag to configure and checks
	whether configure was ran before building anything or doing
	dependencies.

2000-01-28 18:36  Pierre Phaneuf <pp@ludusdesign.com>

	* Makefile, config/.cvsignore, config/config.mk.in, config/main.mk,
	config/rules.mk, config/vars.mk, xplc/rules.mk, xplc/vars.mk: Added
	auto-dependencies and further build system work.

2000-01-28 00:20  Pierre Phaneuf <pp@ludusdesign.com>

	* .cvsignore, Makefile, Makefile.in, config.h.in, configure.in,
	config/.cvsignore, config/config.mk.in, config/main.mk,
	config/rules.mk, config/vars.mk, include/xplc/xplc.h,
	xplc/rules.mk, xplc/vars.mk, xplc/xplc.cpp: Checkpointing work done
	on the build system.

2000-01-27 19:24  Pierre Phaneuf <pp@ludusdesign.com>

	* .cvsignore, Makefile.in, config.guess, config.h.in, config.sub,
	configure.in, install-sh, include/xplc/IObject.h,
	include/xplc/uuid.h, include/xplc/xplc.h: Checkpointing initial
	work.

